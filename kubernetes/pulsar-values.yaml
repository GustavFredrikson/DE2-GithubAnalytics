
namespace: "pulsar"
namespaceCreate: false

clusterDomain: cluster.local


initialize: true


metadataPrefix: ""




persistence: true
volumes:
  persistence: true

  storageClassName: standard



rbac:
  enabled: false
  psp: false
  limit_to_namespace: false



affinity:
  anti_affinity: false
  type: requiredDuringSchedulingIgnoredDuringExecution

components:
  zookeeper: true

  bookkeeper: true

  autorecovery: true
 
  broker: true
 
  functions: true
 
  proxy: true

  toolset: true

  pulsar_manager: false

extra:
  proxy: false
  autoRecovery: false

  pulsar_manager: false
  dashboard: false
  functionsAsPods: false


defaultPulsarImageTag:


images:
  zookeeper:
    repository: apachepulsar/pulsar-all

    tag:
    pullPolicy: Always
  bookie:
    repository: apachepulsar/pulsar-all
    
    tag:
    pullPolicy: Always
  autorecovery:
    repository: apachepulsar/pulsar-all

    tag:
    pullPolicy: Always
  broker:
    repository: apachepulsar/pulsar-all
    
    tag:
    pullPolicy: IfNotPresent
  proxy:
    repository: apachepulsar/pulsar-all

    tag:
    pullPolicy: IfNotPresent
  functions:
    repository: apachepulsar/pulsar-all

    tag:
  pulsar_manager:
    repository: apachepulsar/pulsar-manager
    tag: v0.4.0
    pullPolicy: Always
    hasCommand: false


tls:
  enabled: false
  ca_suffix: ca-tls
  common:
    duration: 2160h
    renewBefore: 360h
    organization:
      - pulsar
    keySize: 4096
    keyAlgorithm: RSA
    keyEncoding: PKCS8
  proxy:
    enabled: false
    cert_name: tls-proxy
  broker:
    enabled: false
    cert_name: tls-broker
  bookie:
    enabled: false
    cert_name: tls-bookie
  zookeeper:
    enabled: false
    cert_name: tls-zookeeper
  autorecovery:
    cert_name: tls-recovery
  toolset:
    cert_name: tls-toolset

auth:
  authentication:
    enabled: false
    provider: "jwt"
    jwt:
      usingSecretKey: false
  authorization:
    enabled: false
  superUsers:
    broker: "broker-admin"
    proxy: "proxy-admin"
    client: "admin"


certs:
  internal_issuer:
    apiVersion: cert-manager.io/v1
    enabled: false
    component: internal-cert-issuer
    type: selfsigning
    duration: 2160h
    renewBefore: 360h
  issuers:
    selfsigning:


zookeeper:
  component: zookeeper
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s
  restartPodsOnConfigMapChange: false
  ports:
    http: 8000
    client: 2181
    clientTls: 2281
    follower: 2888
    leaderElection: 3888
  probe:
    liveness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 20
      periodSeconds: 30
      timeoutSeconds: 30
    readiness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 20
      periodSeconds: 30
      timeoutSeconds: 30
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 20
      periodSeconds: 30
      timeoutSeconds: 30
  affinity:
    anti_affinity: true
    type: requiredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
  extraVolumes: []
  extraVolumeMounts: []
  securityContext:
    fsGroup: 0
    fsGroupChangePolicy: "OnRootMismatch"
  volumes:
    persistence: true
    data:
      name: data
      size: 10Gi
      storageClassName: standard
      selector: {}
  externalZookeeperServerList: ""
  configData:
    PULSAR_MEM: >
      -Xms64m -Xmx256m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dcom.sun.management.jmxremote
      -Djute.maxbuffer=10485760
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:+DisableExplicitGC
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
  additionalCommand:
  service:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  pdb:
    usePolicy: true
    maxUnavailable: 1

bookkeeper:
  component: bookie
  metadata:
    resources:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s
  restartPodsOnConfigMapChange: false
  ports:
    http: 8000
    bookie: 3181
  probe:
    liveness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    readiness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
  affinity:
    anti_affinity: true
    type: requiredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 256Mi
      cpu: 0.2
  extraVolumes: []
  extraVolumeMounts: []
  securityContext:
    fsGroup: 0
    fsGroupChangePolicy: "OnRootMismatch"
  volumes:
    persistence: true
    journal:
      name: journal
      size: 5Gi
      storageClassName: standard
      selector: {}
      useMultiVolumes: false
      multiVolumes:
        - name: journal0
          size: 10Gi
          mountPath: /pulsar/data/bookkeeper/journal0
        - name: journal1
          size: 10Gi
          mountPath: /pulsar/data/bookkeeper/journal1
    ledgers:
      name: ledgers
      size: 5Gi
      storageClassName: standard
      useMultiVolumes: false
      multiVolumes:
        - name: ledgers0
          size: 10Gi
          storageClassName: standard
          mountPath: /pulsar/data/bookkeeper/ledgers0
        - name: ledgers1
          size: 10Gi
          storageClassName: standard
          mountPath: /pulsar/data/bookkeeper/ledgers1

    useSingleCommonVolume: false
    common:
      name: common
      size: 20Gi
      storageClassName: standard

  configData:
    PULSAR_MEM: >
      -Xms256m
      -Xmx512m
      -XX:MaxDirectMemorySize=512m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
      -Xlog:gc*
      -Xlog:gc::utctime
      -Xlog:safepoint
      -Xlog:gc+heap=trace
      -verbosegc
    dbStorage_writeCacheMaxSizeMb: "128"
    dbStorage_readAheadCacheMaxSizeMb: "128"
    dbStorage_rocksDB_writeBufferSizeMB: "64"
    dbStorage_rocksDB_blockCacheSize: "8388608"
  additionalCommand:
  service:
    spec:
      publishNotReadyAddresses: true
  pdb:
    usePolicy: true
    maxUnavailable: 1


autorecovery:

  component: recovery
  replicaCount: 1

  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s

  restartPodsOnConfigMapChange: false
  ports:
    http: 8000

  affinity:
    anti_affinity: true

    type: requiredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  gracePeriod: 30
  resources:
    requests:
      memory: 128Mi
      cpu: 0.1

  configData:
    BOOKIE_MEM: >
      -Xms128m -Xmx256m
    PULSAR_PREFIX_useV2WireProtocol: "true"

pulsar_metadata:
  component: pulsar-init
  image:

    repository: apachepulsar/pulsar-all
   
    tag:
    pullPolicy: IfNotPresent

  configurationStoreMetadataPrefix: ""
  configurationStorePort: 2181

extraInitCommand: ""


broker:

  component: broker
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    metrics: ~

  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s
  restartPodsOnConfigMapChange: false
  ports:
    http: 8080
    https: 8443
    pulsar: 6650
    pulsarssl: 6651

  probe:
    liveness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
    readiness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
  affinity:
    anti_affinity: true

    type: preferredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 512Mi
      cpu: 0.2

  extraVolumes: []
  extraVolumeMounts: []
  extreEnvs: []

  configData:
    PULSAR_MEM: >
      -Xms256m -Xmx512m -XX:MaxDirectMemorySize=256m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
    managedLedgerDefaultEnsembleSize: "1"
    managedLedgerDefaultWriteQuorum: "1"
    managedLedgerDefaultAckQuorum: "1"

  additionalCommand:

  service:
    annotations: {}

  pdb:
    usePolicy: true
    maxUnavailable: 1

  service_account:
    annotations: {}

functions:
  component: functions-worker


proxy:

  component: proxy
  replicaCount: 3
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    metrics: ~

  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s

  restartPodsOnConfigMapChange: false
  probe:
    liveness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
    readiness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
  affinity:
    anti_affinity: true
    type: requiredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 128Mi
      cpu: 0.2

  extraVolumes: []
  extraVolumeMounts: []
  extreEnvs: []

  configData:
    PULSAR_MEM: >
      -Xms64m -Xmx128m -XX:MaxDirectMemorySize=64m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
    httpNumThreads: "8"
  additionalCommand:

  ports:
    http: 8084
    https: 8443
    pulsar: 6650
    pulsarssl: 6651
  service:
    annotations: {}
    type: LoadBalancer
  ingress:
    enabled: false
    annotations: {}
    tls:
      enabled: false
      secretName: ""

    hostname: ""
    path: "/"

  pdb:
    usePolicy: true
    maxUnavailable: 1


dashboard:
  component: dashboard
  replicaCount: 1
  annotations: {}
  tolerations: []
  gracePeriod: 0
  image:
    repository: apachepulsar/pulsar-dashboard
    tag: latest
    pullPolicy: Always
  resources:
    requests:
      memory: 256Mi
      cpu: 350m
  service:
    annotations: {}
    ports:
    - name: server
      port: 80
  ingress:
    enabled: false
    annotations: {}
    tls:
      enabled: false

      secretName: ""


    hostname: ""
    path: "/"
    port: 80



toolset:
  component: toolset
  useProxy: true
  replicaCount: 1

  restartPodsOnConfigMapChange: false
 
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 128Mi
      cpu: 0.1

  extraVolumes: []
  extraVolumeMounts: []

  configData:
    PULSAR_MEM: >
      -Xms64M
      -Xmx128M
      -XX:MaxDirectMemorySize=128M

  additionalCommand:


kube-prometheus-stack:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
  prometheus-node-exporter:
    enabled: true
  alertmanager:
    enabled: false


pulsar_manager:
  component: pulsar-manager

job:
  ttl:
    enabled: false
    secondsAfterFinished: 3600
